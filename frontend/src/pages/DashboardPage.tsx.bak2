/**
 * Dashboard Page - Exemplo Completo
 * 
 * P√°gina que demonstra todos os componentes de real-time juntos.
 */

import { RealtimeTelemetryCard, RealtimeTelemetryCardCompact } from '../components/RealtimeTelemetryCard';
import { RealtimeChart } from '../components/RealtimeChart';
import { DeviceStatusGrid } from '../components/DeviceStatusGrid';

export function DashboardPage() {
  // Configura√ß√£o de devices
  const devices = [
    {
      id: 'esp32s3-lab',
      name: 'ESP32-S3 Lab',
      location: 'Laborat√≥rio Principal',
      type: 'Sensor Ambiental',
      icon: 'üå°Ô∏è',
      keyEntities: ['temperature'],
    },
    {
      id: 'esp32-lab',
      name: 'ESP32 Lab',
      location: 'Laborat√≥rio Secund√°rio',
      type: 'Sensor de Temperatura',
      icon: 'üî¨',
      keyEntities: ['temperature'],
    },
  ];

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      {/* Header */}
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900">Dashboard em Tempo Real</h1>
        <p className="text-gray-600 mt-1">Monitoramento IoT com WebSocket</p>
      </div>

      {/* Grid de Devices */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">Meus Devices</h2>
        <DeviceStatusGrid
          devices={devices}
          onDeviceClick={(deviceId) => {
            console.log('Device clicked:', deviceId);
            // Navegar para p√°gina de detalhes
          }}
          columns={3}
        />
      </div>

      {/* Cards Grandes */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">Telemetrias Principais</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <RealtimeTelemetryCard
            deviceId="esp32s3-lab"
            entityId="temperature"
            entityName="Temperatura Lab"
            unit="¬∞C"
            icon="üå°Ô∏è"
            minValue={0}
            maxValue={50}
            warningThreshold={30}
            dangerThreshold={40}
          />

          <RealtimeTelemetryCard
            deviceId="esp32-lab"
            entityId="temperature"
            entityName="Temperatura Sala"
            unit="¬∞C"
            icon="üè†"
            minValue={0}
            maxValue={50}
          />

          <RealtimeTelemetryCard
            deviceId="esp32s3-lab"
            entityId="button"
            entityName="Bot√£o"
            icon="üîò"
          />
        </div>
      </div>

      {/* Cards Compactos */}
      <div className="mb-8">
        <h2 className="text-xl font-semibold text-gray-900 mb-4">Resumo R√°pido</h2>
        <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4">
          <RealtimeTelemetryCardCompact
            deviceId="esp32s3-lab"
            entityId="temperature"
            entityName="Temp. Lab"
            unit="¬∞C"
            icon="üå°Ô∏è"
          />
          
          <RealtimeTelemetryCardCompact
            deviceId="esp32-lab"
            entityId="temperature"
            entityName="Temp. Sala"
            unit="¬∞C"
            icon="üè†"
          />

          <RealtimeTelemetryCardCompact
            deviceId="esp32s3-lab"
            entityId="status_led"
            entityName="LED Status"
            icon="üí°"
          />

          <RealtimeTelemetryCardCompact
            deviceId="esp32s3-lab"
            entityId="button"
            entityName="Bot√£o"
            icon="üîò"
          />
        </div>
      </div>

      {/* Gr√°fico */}
      <div>
        <h2 className="text-xl font-semibold text-gray-900 mb-4">Hist√≥rico em Tempo Real</h2>
        <RealtimeChart
          deviceId="esp32s3-lab"
          entities={[
            { entityId: 'temperature', entityName: 'Temperatura', color: '#ef4444' },
          ]}
          maxDataPoints={30}
          refreshInterval={2000}
          height={400}
          title="Temperatura - ESP32-S3 Lab"
          unit="¬∞C"
        />
      </div>
    </div>
  );
}
